{% extends "layouts/main.njk" %}
{% block body %}

      <h3 class="text-white text-center bg-dark">Completa con i tuoi dati</h3>
      <hr style="border-top: 1px solid #5375BD;">

      {% if message %}
        {% for message in message %}
          <div class="alert alert-warning">{{message}}</div>
        {% endfor %}
      {% endif %}

      <form role="form" action="/register" method="post">
        <div class="form-group">
          <label for="inputUsernameEmail" class="text-white col-form-label-lg">Nome e Cognome</label>
          <input type="text" class="form-control" id="inputFirsName" value="{{firstName}}"
           name="firstName" placeholder="Nome" readonly>
        </div>
        <div class="form-group">
          <input type="text" class="form-control" id="inputLastName" value="{{lastName}}"
           name="lastName" placeholder="Cognome">
        </div>
        <div class="form-group">
          <div ><label for="inputMobile" class="text-white col-form-label-lg">Cellulare</label></div>
          <div style="color:yellow; font-size:80%;" id="wrongPhone"></div>
          <div class="input-group mb-2">
            <div class="input-group-prepend">
              <span class="input-group-text" id="basic-addon1">+39</span>
            </div>
            <input type="text" class="form-control" id="inputMobile" value="{{mobile}}"
             name="mobile" placeholder="" autofocus required>
          </div>
        </div>
        <div class="form-group">
          <div ><label for="inputCity" class="text-white col-form-label-lg">Comune</label></div>
          <div style="color:yellow; font-size:80%;" id="wrongCity"></div>
          <input type="text" class="form-control" id="inputCity" value="{{city}}"
           name="city" placeholder="" required oninput="selectCity(this.value)"/>
          <div class="w-100"></div>
          <div id="cities"></div>
        </div>
        <div class="form-group">
          <div "><label for="inputCap" class="text-white col-form-label-lg">CAP</label></div>
          <div style="color:yellow; font-size:80%;" id="wrongCap"></div>
          <input type="text" class="form-control" id="inputCap" value="{{cap}}" name="cap" required readonly>
          <div class="w-100"></div>
          <div id="caps"></div>
        </div>
        <div class="form-group">
          <div><label for="inputAddress" class="text-white col-form-label-lg">Indirizzo</label></div>
          <div style="color:yellow; font-size:80%;" id="wrongAddress"></div>
          <input type="text" class="form-control" id="inputAddress" value="{{address}}" name="address" required>
        </div>
        <div class="form-group">
          <div ><label for="inputNumciv" class="text-white col-form-label-lg">Numero Civico</label></div>
          <div style="color:yellow; font-size:80%;" id="wrongNumciv"></div>
          <input type="text" class="form-control" id="inputNumciv" value="{{number}}" name="number" required>
        </div>
        <br>
        <div>
          <button type="submit" class="btn btn-my btn-lg btn-block" id="mybutton" onclick="return fieldsRegisterControl()">
            Save
          </button>
        </div>
      </form>
      <br>

<script type="text/javascript">
/*==================================================================*/
/* GESTIONE della CITTA' e CAP con recupero da MONGODB              */
/* https://developer.snapappointments.com/bootstrap-select/         */
/*==================================================================*/
Element.prototype.remove = function() {
      this.parentElement.removeChild(this);
    };
NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
  for(var i = this.length - 1; i >= 0; i--) {
    if(this[i] && this[i].parentElement) {
      this[i].parentElement.removeChild(this[i]);
    }
  }
};

function hideMyselect(select) {
   document.getElementById(select).style.visibility= 'hidden';
   document.getElementById("inputCap").focus();
}

function selectCap() {
  $("#myselectcaps").on("changed.bs.select", function(e, clickedIndex, isSelected, oldValue) {
    var cap = $(this).find('option').eq(clickedIndex).text();
    inputCap.value = cap;
    $("#myselectcaps").selectpicker('hide');
    document.getElementById("inputAddress").focus();
  });
}

function selectCaps() {
  $("#myselect").on("changed.bs.select", function(e, clickedIndex, isSelected, oldValue) {
    var selectedD = $(this).find('option').eq(clickedIndex).text();
    var city = selectedD.substring(0, selectedD.length - 4 );
    inputCity.value = city;

    $("#myselect").selectpicker('hide');
    document.getElementById("inputCap").focus();

    var data = {};
    data.city = city;
    /* Recuper i CAP della città selezionata da MongoDB */
    $.ajax({
      type: 'POST',
      dataType: 'json',
      url: '/caps',
      data: data,
      success: function(res) {
        /* Creo la select option con elenco dei CAP se multipli e dinamicamente */
        if (typeof res !== 'undefined' && res.length > 0) {
          var selectcaps = document.createElement('select'),
              option= null,
              i = 0,
              il = res.length;
          if ( il == 1 ) {
            inputCap.value = res[0].CAP;
            document.getElementById("inputAddress").focus();
          } else {
            selectcaps.setAttribute('id','myselectcaps');
            selectcaps.setAttribute('class','form-control selectpicker');
            selectcaps.setAttribute('onchange','if (this.selectedIndex) selectCap();');

            option = document.createElement('option');
            option.text = 'Select a CAP';
            selectcaps.appendChild(option);

            for (; i < il; i += 1) {
              option = document.createElement('option');
              option.appendChild(document.createTextNode(res[i].CAP));
              selectcaps.appendChild(option);
            };

            $("#caps").html(selectcaps);
            $("#myselectcaps").selectpicker('refresh');
          }
        } else {
          if (document.getElementById('myselectcaps') !=null) {
            document.getElementById('myselectcaps').remove();
            $("#myselectcaps").selectpicker('destroy');
          }
        }
      },
      error: function (e) {
        console.log("Error", e);
      }
    });
  });
}

function selectCity (v) {
  var vl = v.toLowerCase();
/*  Per ottimizzare le chiamate al DB  solo le citta con 2 caratteri sono permesse */
  if (vl.length > 2 || vl =='lu' || vl =='ne' || vl =='re' || vl =='ro') {

    var data = {};
    data.city = v;
/* Seleziono la città con API che ricerca su MongoDB */
    $.ajax({
      type: 'POST',
      dataType: 'json',
      url: '/cities',
      data: data,
      success: function(res) {
        if (typeof res !== 'undefined' && res.length > 0) {
          /* Creo la select option con elenco delle città in modo dinamico */
          var select = document.createElement('select'),
              option= null,
              i = 0,
              il = res.length;

          select.setAttribute('id','myselect');
          select.setAttribute('class','form-control selectpicker dropup data-live-search="true"');
          select.setAttribute('onchange','if (this.selectedIndex) selectCaps();');

          option = document.createElement('option');
          option.text = 'Select a City';
          select.appendChild(option);

          for (; i < il; i += 1) {
              option = document.createElement('option');
              option.appendChild(document.createTextNode(res[i].Comune+'('+res[i].Provincia+')'));
              select.appendChild(option);
          };

          $("#cities").html(select);
          $("#myselect").selectpicker('refresh');

        } else {

          if (document.getElementById('myselect') != null) {
            $("#myselect").selectpicker('destroy');
            document.getElementById('myselect').remove();
          }
          if (document.getElementById('myselectcaps') !=null) {
            $("#myselectcaps").selectpicker('destroy');
            document.getElementById('myselectcaps').remove();
          }
        }
      },

      error: function (e) {
        console.log("Error", e);
      }
    });

  } else {

    inputCap.value=null;
    if (document.getElementById('myselect') != null) {
      $("#myselect").selectpicker('destroy');
      document.getElementById('myselect').remove();
    }
    if (document.getElementById('myselectcaps') !=null) {
      $("#myselectcaps").selectpicker('destroy');
      document.getElementById('myselectcaps').remove();
    }
  }
};

</script>

{% endblock %}
